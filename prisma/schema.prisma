generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

/// A job post obtained by web scraping
model Job {
  id             Int      @id @default(autoincrement())
  title          String
  source         String /// Where did we find this job
  companyId      Int      @map("company_id")
  keywords       String   @default("[]") /// Job associated keywords
  location       String   @default("[]") /// e.g., ["San Francisco", "United States"]
  publishedAt    DateTime @map("published_at")
  salaryMin      Int?     @map("salary_min")
  salaryMax      Int?     @map("salary_max")
  jobDescription String   @map("job_description") /// In markdown format
  jobUrl         String   @unique @map("job_url") /// URL of real job post
  isRemote       Boolean? @map("is_remote")

  aiAnalysis JobAiAnalysis?
  company    Company        @relation(fields: [companyId], references: [id])
}

model Company {
  id      Int     @id @default(autoincrement())
  name    String  @unique
  logoUrl String? @map("logo_url")
  jobs    Job[]
}

/// AI generated analysis of the job.
model JobAiAnalysis {
  id                  Int      @id @default(autoincrement())
  jobId               Int      @unique @map("job_id")
  summary             String
  keywords            String
  isRemote            Boolean? @map("is_remote")
  location            String?  @default("[]") /// e.g., ["San Francisco", "United States"]
  isFullTime          Boolean? @map("is_full_time")
  optionToPayInCrypto Boolean? @map("option_to_pay_in_crypto")
  salaryMin           Int?     @map("salary_min")
  salaryMax           Int?     @map("salary_max")

  job Job @relation(fields: [jobId], references: [id])
}
